<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence" version="2.1">

    <persistence-unit name="study">
        <class>jpabook.start.identifier_strategy.Member</class>
        <class>jpabook.start.relational_mapping.one_way.many_to_one.Member</class>
        <class>jpabook.start.relational_mapping.one_way.many_to_one.Team</class>

        <class>jpabook.start.relational_mapping.bidirectional.many_to_one.Member</class>
        <class>jpabook.start.relational_mapping.bidirectional.many_to_one.Team</class>
        <class>jpabook.start.relational_mapping.bidirectional.one_to_one.Member</class>
        <class>jpabook.start.relational_mapping.bidirectional.one_to_one.Locker</class>

        <class>jpabook.start.relational_mapping.one_way.one_to_many.Member</class>
        <class>jpabook.start.relational_mapping.one_way.one_to_many.Team</class>
        <class>jpabook.start.relational_mapping.one_way.one_to_one.Member</class>
        <class>jpabook.start.relational_mapping.one_way.one_to_one.Locker</class>

<!--        <class>jpabook.start.mapping.join_strategy.Item</class>-->
        <class>jpabook.start.mapping.join_strategy.Album</class>
        <class>jpabook.start.mapping.join_strategy.Movie</class>
        <class>jpabook.start.mapping.join_strategy.Book</class>

        <!--        <class>jpabook.start.mapping.single_table_strategy.Item</class>-->
        <class>jpabook.start.mapping.single_table_strategy.Album</class>
        <class>jpabook.start.mapping.single_table_strategy.Movie</class>
        <class>jpabook.start.mapping.single_table_strategy.Book</class>

        <!--        <class>jpabook.start.mapping.table_per_concrete_class_strategy.Item</class>-->
        <class>jpabook.start.mapping.table_per_concrete_class_strategy.Album</class>
        <class>jpabook.start.mapping.table_per_concrete_class_strategy.Movie</class>
        <class>jpabook.start.mapping.table_per_concrete_class_strategy.Book</class>

        <class>jpabook.start.mapping.mapped_super_class.Member</class>
        <class>jpabook.start.mapping.mapped_super_class.Seller</class>

        <class>jpabook.start.mapping.composite_key.non_identifying_relationship.id_class.Parent</class>
        <class>jpabook.start.mapping.composite_key.non_identifying_relationship.id_class.Child</class>

        <class>jpabook.start.mapping.composite_key.non_identifying_relationship.embedded_id.Parent</class>
        <class>jpabook.start.mapping.composite_key.non_identifying_relationship.embedded_id.Child</class>

        <class>jpabook.start.mapping.composite_key.identifying_relationship.id_class.Parent</class>
        <class>jpabook.start.mapping.composite_key.identifying_relationship.id_class.Child</class>
        <class>jpabook.start.mapping.composite_key.identifying_relationship.id_class.GrandChild</class>

        <class>jpabook.start.mapping.composite_key.identifying_relationship.embedded_id.Parent</class>
        <class>jpabook.start.mapping.composite_key.identifying_relationship.embedded_id.Child</class>
        <class>jpabook.start.mapping.composite_key.identifying_relationship.embedded_id.GrandChild</class>

        <class>jpabook.start.proxy.basic.Member</class>
        <class>jpabook.start.proxy.basic.Team</class>

        <class>jpabook.start.proxy.eager_loading.Member</class>
        <class>jpabook.start.proxy.eager_loading.Team</class>

        <class>jpabook.start.proxy.lazy_loading.Member</class>
        <class>jpabook.start.proxy.lazy_loading.Team</class>

        <class>jpabook.start.value_type.embedded_type.basic.Member</class>

        <class>jpabook.start.value_type.embedded_type.advanced.Employee</class>
        <class>jpabook.start.value_type.embedded_type.advanced.Student</class>

        <class>jpabook.start.value_type.collection.Member</class>

        <properties>
            <!-- 필수 속성 -->
            <property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>
            <property name="javax.persistence.jdbc.user" value="sa"/>
            <property name="javax.persistence.jdbc.password" value=""/>
            <property name="javax.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/test"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect" />

            <!-- 옵션 -->
            <property name="hibernate.show_sql" value="true" />
            <property name="hibernate.format_sql" value="true" />
            <property name="hibernate.use_sql_comments" value="true" />

            <!-- 기본 키 생성 전략 사용 여부(ex. @GeneratedValue IDENTITY, SEQUENCE, TABLE) -->
            <property name="hibernate.id.new_generator_mappings" value="true"/>

<!--            <property name="hibernate.ejb.naming_strategy" value="org.hibernate.cfg.ImprovedNamingStrategy"/>-->
            <!-- Hibernate 5 부터는 org.hibernate.boot.model.naming.PhysicalNamingStrategy Interface 를 implements 해야함
                org.hibernate.boot.model.naming.ImplicitNamingStrategy Interface 도 있으니 나중에 찾아보자-->
            <property name="hibernate.physical_naming_strategy" value="jpabook.start.identifier_strategy.PhysicalNamingStrategyImpl"/>

            <property name="hibernate.hbm2ddl.auto" value="create" />
        </properties>
    </persistence-unit>

    <persistence-unit name="query">

        <class>jpabook.start.object_oriented_query.jpql.basic.Member</class>

        <class>jpabook.start.object_oriented_query.criteria.basic.Member</class>

        <class>jpabook.start.object_oriented_query.query_dsl.basic.Member</class>

        <class>jpabook.start.object_oriented_query.query_dsl.basic.Posts</class>

        <properties>
            <!-- 필수 속성 -->
            <property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>
            <property name="javax.persistence.jdbc.user" value="sa"/>
            <property name="javax.persistence.jdbc.password" value=""/>
            <property name="javax.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/test"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect" />

            <!-- 옵션 -->
            <property name="hibernate.show_sql" value="true" />
            <property name="hibernate.format_sql" value="true" />
            <property name="hibernate.use_sql_comments" value="true" />

            <!-- 기본 키 생성 전략 사용 여부(ex. @GeneratedValue IDENTITY, SEQUENCE, TABLE) -->
            <property name="hibernate.id.new_generator_mappings" value="true"/>

            <!--            <property name="hibernate.ejb.naming_strategy" value="org.hibernate.cfg.ImprovedNamingStrategy"/>-->
            <!-- Hibernate 5 부터는 org.hibernate.boot.model.naming.PhysicalNamingStrategy Interface 를 implements 해야함
                org.hibernate.boot.model.naming.ImplicitNamingStrategy Interface 도 있으니 나중에 찾아보자-->
            <property name="hibernate.physical_naming_strategy" value="jpabook.start.identifier_strategy.PhysicalNamingStrategyImpl"/>

            <property name="hibernate.hbm2ddl.auto" value="create" />
        </properties>
    </persistence-unit>
</persistence>